# -*- coding: utf-8 -*-
"""Titanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yn7Bk6CwkyG9gp3wVWHaVcsi0F36TT9p
"""

import seaborn as sns

tips = sns.load_dataset('tips')

sns.relplot(x='total_bill', y='tip', data=tips, hue='smoker', style='time',size="size")

tips

sns.relplot(data=tips, x='day', y ='tip', kind='line', hue='sex')

sns.relplot(data=tips, x='total_bill', y='tip', col='day', row='time',hue='sex')

sns.catplot(data=tips, x='day', y='total_bill', hue='sex',jitter=False)

sns.catplot(data=tips, x='day', y ='total_bill', hue='sex', jitter=False, order=['Sat','Sun','Thur','Fri'])

sns.catplot(data=tips, x='day', y='total_bill', order=['Sat','Sun','Thur','Fri'],kind='box',hue='sex')

sns.distplot(tips['tip'],hist=True,kde=False )

sns.jointplot(data=tips, x='total_bill',y='tip')

sns.pairplot(tips)

sns.pairplot(tips, hue='smoker')

iris = sns.load_dataset('iris')

sns.relplot(data=iris, x='sepal_length', y='sepal_width', hue='species')

iris

import numpy as np

c = np.array([[[ 1, 2, 3, 4],
[ 5, 6, 7, 8],
[ 9, 10, 11, 12]],
[[13, 14, 15, 16],
[17, 18, 19, 20],
[21, 22, 23, 24]]])

c.shape

c.reshape(3,2,4)

c.reshape(4,3,2)

c = c.T

c.transpose()

c=np.arange(1,25).reshape(4,6)

c

c = c.ravel()

c = c.resize(2,3,4)

a1 = np.array([[1,2],[3,4]])
a2 = np.array([[5,6],[7,8]])

a3 = np.vstack((a1,a2))

a3

a4 = np.hstack((a1,a2))
a4

c.ndim

c.size

zarray = np.zeros((3,2), dtype=np.int16)
zarray

earray = np.empty((3,3))
earray

a=np.arange(1,25).reshape(2,3,4)
a

a[1,2,3]

a[1,2]

a[1]

a = np.array([1,2,3,4,5,6,7,8])

a[1:5]

a[1:6:2]

a[0:2,0:2,0:2]

a[0:2,0:2]

a[0:2]

a[1,1:3,3]

a = np.arange(10)
a

i = np.array([1,1,4,7,5])

a[i]

j = np.array(([[3,4],[4,7]]))

a[j]

a = np.array([[1,2],[3,4]])
b = np.array([[5,6],[7,8]])

a@b

a.dot(b)

c = np.array([[5,6],[7,8],[9,10]])

# Commented out IPython magic to ensure Python compatibility.
rng = np.random.RandomState(42)
x = rng.rand(100000)
y = rng.rand(100000)
# %timeit x+y

import pandas as pd

s3 = pd.Series([1,2,3,'a','b','c'],
index=['A','B','C','D','E','F'])

s3

s4 = pd.Series({'A':1,'B':2,'C':3})

s4

s1 = pd.Series([1,2,3])
s2 = pd.Series(np.array([1,2,3,4,5]))

s1

s2

s2[2]

s2[:2]

s3['A']

s3[['A','B','C']]

d1 = pd.DataFrame({'A':[1,2,3],'B':[2,3,4]})

d1

d2 = pd.DataFrame({'A':[1,2,3],'B':[2,3,4]},index=['X','Y','Z'])

d2

d3 = pd.DataFrame({'A':np.array([1,2,3]),
'B':[2,3,4]}, index=['X','Y','Z'])

d3

d4 = pd.DataFrame({'A':[1,2,3],'B':s1})

d4

d9 = pd.DataFrame([1,2,3,'a','b','c'])
d9

d10 = pd.DataFrame([[1,2,3],[2,3,4],[3,4,5]])
d10

d11 = pd.DataFrame([[1,2,3],[2,3,4],[3,4,5]],columns=['A','B','C'])
d11

d12=pd.DataFrame([[1,2,3],[2,3,4],[3,4,5]], columns=['A','B','C'],
index=['X','Y','Z'])
d12

d13 = pd.DataFrame([{'a': 1, 'b': 2},{'a': 5, 'b': 10}])
d13

d14 = pd.DataFrame([{'a': 1, 'b': 2},{'a': 5, 'b':
10}],index=['A','B'])
d14

d15 = pd.DataFrame([[1,2],[2,3],[3,4,5]])
d15

d16= pd.DataFrame([{'a': 1, 'b': 2},{'b': 5, 'c':
10,'d':15}])
d16

d17 = pd.DataFrame([{'a': 1, 'b': 2},{'b': 5,
'c':10,'d':15}], columns=['b','d','e'])
d17

from google.colab import files
import io

uploaded = files.upload()

df_titan = pd.read_csv(io.BytesIO(uploaded['titanic_train.csv']))

df_titan

df_titan = pd.read_csv(io.BytesIO(uploaded['titanic_train.csv']), index_col='PassengerId')

df_titan

columns = [2,3,4]

df_titan = pd.read_csv(io.BytesIO(uploaded['titanic_train.csv']), usecols=columns)

df_titan

n = pd.read_csv(io.BytesIO(uploaded['titanic_train.csv']), skiprows=3, nrows=10)

df_titan

missing=['not available','missing']

n = pd.read_csv(io.BytesIO(uploaded['titanic_train.csv']), na_values=missing)

n

print(df_titan['Age'])

print(df_titan[['Age']])

df_titan['f'] = pd.Series([10,10])

df_titan['f']

del df_titan['f']

df_titan.loc[1]

df_titan.loc[['a','c','e']]

df_titan.info()

df_titan.describe()

df_titan.describe(include='all')

df_titan.mean()

df_titan.mean(axis=1)

df_titan['Pclass'].value_counts()

df_titan.hist()

df_titan.hist('Age')

df_titan.hist("Survived", by="Sex")

sns.distplot(df_titan['Age'])

sns.distplot(df_titan['Fare'])

sns.distplot(df_titan['Fare'])

sns.pairplot(df_titan, hue='Sex')

sns.catplot(data=df_titan, x = 'Survived', y='Fare', hue='Sex', kind='box')

sns.catplot(data=df_titan, x ='Sex', hue='Survived', kind="count")

df_titan.describe(include='all')

df_titan.isnull().sum()

df_titan.dropna()

df_titan.dropna(axis=1)

df_titan.dropna(thresh=11)

df_titan.fillna(1)

df_titan.fillna({'Age':20,'Cabin':'B96'})

df_titan.fillna({'Age':df_titan['Age'].mean(),'Cabin':'B96'})

df_titan.mean()

df_titan.mean(axis=1)

df_titan.dropna()

df_titan.dropna(axis=1)

df_titan = df_titan.fillna({'Age':df_titan['Age'].mean()}).dropna(axis=1)

df_titan = df_titan.set_index(['PassengerId'])

top = df_titan['Age'].mean()+2*df_titan['Age'].std()

df_titan.Name.str.extract('\s(\w+)\.')

df_titan['Title'] = df_titan.Name.str.extract('\s(\w+)\.')

df_titan['Title']

df_titan.Name.str.extract('^(\w+),')

df_titan.Name.str.extract('^([\w\s\']+),')

df_titan.Name.str.extract('^([\w\s\']+),')

df_titan['LastName'] = df_titan.Name.str.extract('^(\D+),')

df_titan['LastName']

pd.get_dummies(df_titan['Sex'])

df_titan[['Female','Male']]=pd.get_dummies(df_titan['Sex'])

df_titan[['Female','Male']]

df_titan['FareNor']=(df_titan['Fare']-df_titan['Fare'].mean()/df_titan['Fare'].std())

df_titan['FareNor']

df_titan['FareLog']=np.log(df_titan['Fare'])

df_titan['FareLog']

pd.cut(df_titan['Age'],3)

pd.cut(df_titan['Age'],[0,19,61,100])

df_titan['AgeGroup']=pd.cut(df_titan['Age'],[0,19,61,100], labels=['Minor','Adult','Elder'])

df_titan['AgeGroup']

df_titan['Family']=df_titan['Parch']+df_titan['SibSp']
df_titan['Family']

df_titan.loc[df_titan['Family']>0,'Family']=1

df_titan.loc[df_titan['Family']==0,'Family']=0

import re

print(re.findall('o','i love python'))

print(re.findall(r'[a-p]','i love Python'))

print(re.findall(r'[lop]','i love python'))

print(re.findall(r'[o-t][v-z]','i love python'))

print(re.findall(r'\w','I love爱python3"))'))

print(re.findall(r'\d','I love爱python3"))'))

print(re.findall(r'\w\d','I love爱python3"))'))

print(re.findall(r'\D','I love爱python3"))'))

print(re.findall(r'u1\d\d\d\d\d\d','u1888888'))

print(re.findall(r'\S','I love python3."))'))

print(re.findall(r'\w\b','I, love.'))

print(re.findall(r'\w\B','I, love.'))

print(re.findall(r'^\w','I, love python'))

print(re.findall(r'\w$', 'I, love Python'))

from sklearn.impute import SimpleImputer

imp = SimpleImputer(strategy='mean')

df_titan['Age']=imp.fit_transform(df_titan[['Age']])

df_titan['Age']=imp.fit_transform(np.array(df_titan['Age']).reshape(-1,1))

df_titan['Age']

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

df_titan['Age']=scaler.fit_transform(df_titan[['Age']])

df_titan['Age']

from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()

df_titan['Age']=scaler.fit_transform(df_titan[['Age']])

df_titan['Age']

from sklearn.preprocessing import OrdinalEncoder

enc=OrdinalEncoder()

df_titan['Sex']=enc.fit_transform(df_titan[['Sex']])

df_titan['Sex']

from sklearn.preprocessing import OneHotEncoder

enc=OneHotEncoder()

df_titan['Sex']=enc.fit_transform(df_titan[['Sex']])
df_titan['Sex']



